★はじめに
・このアプリはアングラな非公式です　自己責任で公式にバレないように使ってください
・このアプリは読み上げ機能の有無で2種類あります
　・試用は読み上げ「無し」を推奨します

＊以下、アプリ概要、使い方、読み上げありの機能、詳細機能について説明します。

○アプリ概要
ソウルタイドの九華をChatGPTのランチャーにした感じのアプリ。

○使い方
・九華
　・ダブルクリックするとChatGPTのウィンドウを「表示/非表示」します
　・右クリックをするとメニューを開きます
　　・終了する場合は必ずここから終了してください
　　・それ以外は直感的に動くと思います

・ChatGPT
　・ただブラウザを起動しているだけなので、自分のGoogleアカウントなりでログインすると通常のブラウザ版と同じように使えます

・その他
　・初回起動時にファイアウォールの警告が出るかもしれませんが、許可してください。悪いことはしていません



-----------読み上げ無しを使う場合、ここまで読めば十分です--------------------------------------


★「読み上げあり」の動作補足
○概要
ChatGPTの会話内容を読み取り、ChatGPTで会話をしていた場合に限り、1時間毎くらいに感想を喋ってくれます。
メニューから機能のON/OFFが設定できます。

○オススメの使い方
・最初に「Live2dChatter_Data\StreamingAssets\InferenceCheck.bat」を実行してみてください
　・初回起動時にファイアウォールの警告が出るかもしれませんが、許可してください。悪いことはしていません
　・九華が喋ったら成功です。喋らなかったら今後も動作しないと思います

○注意点
・AI(Style-Bert-VITS2)を使っているので色々な注意点があります
　・モデルを読み込むためにファイルサイズが7GBくらい増えます
　・単純にうまく動作しないかもしれません
　・不自然な音声で九華のイメージを損なう可能性があります
　・動作する場合、1時間ごとに結構なメモリ(1.5GBくらい？)とGPUリソースを消費します
・ChatGPTの会話履歴に感想を喋らせる命令が残ります
・ブラウザ版ChatGPTの機能が変更すると動作しなくなるかもしれません。自分用に保守するかもしれませんが、しないかもしれません。



-----------詳細機能に興味が無い場合、ここまで読めば十分です--------------------------------------


○設定ファイル「config.json」
以下のファイルを編集することで一部の設定を変更することができます。
「Live2dChatter_Data/StreamingAssets/config.json」

キーと値の説明。

{
  "port": "52322",　// ポート番号※1
  "bgm": {
    "op": "BGM_Common_Login.mp3", // 起動時に流れるBGM　※2
    "day": {　// 日中(04:00～17:59)に流れるBGMのリスト
      "BGM_Common_MainCity_Day.mp3": 70,　// BGMのファイル名と確率※3
      …
    },
    "night": {　// 夜(18:00～03:59)に流れるBGMのリスト
      …
    }
  },
  "imp_interval": "3600000",　// 読み上げ実行間隔※4
  "isSaveImpCv": false, // 読み上げ音声を保存するかどうか
  // その他のキーは原則いじらないでください
}

※1…Live2DとChatGPTが相互に通信するための内部的なポート。運悪く衝突する場合は変更してください。さらなる詳細は後述。
※2…BGMは以下のフォルダに格納する必要があります。対応拡張子：(wav,mp3,ogg)
　　「Live2dChatter_Data/StreamingAssets/BGM」
※3…確率は重み付きランダムサンプリングに使われます。簡単に言えば数字が大いほど抽選しやすくなります。合計が100である必要はありません。
※4…ミリ秒単位の指定。デフォルトで60*60*1000=1時間。処理の都合上、最低でも3分(=180000)は必要。

○ファイアウォールが2回も起動する理由
①Electronのサーバー
Live2DをUnityのアプリとして起動し、ChatGPTはNode.jsのElectronアプリで別プロセスとして起動しています。
そのため、九華のダブルクリックとChatGPTウィンドウの表示切り替えをするために何らかの方法で通信する必要があります。
今回は通信する方法としてElectronの内部にサーバーを立ててHTTPで通信する方法を選んだので、ファイアウォールの警告が出ます。
ChatGPTがブラウザとして「https://chatgpt.com」と通信する以外には外部へのデータ送受信は行っていないのでご安心ください。

②AIのopenjdk
音声合成はElectronアプリからさらにpythonのAIを呼び出すことで実現しています。
AIはどうやらpyopenjtalk_workerというTCPソケットサーバーを内部で起動しているらしいのでファイアウォールに引っかかる。
今回はスポット的な推論だけなのでサーバー的な動作をする必要はないが、元のプログラムをどう変更すればよいか分からなかったのでそのままにしてある。
ちなみに、生成した音声データは読み上げ後にすぐ削除される仕組みです。「isSaveImpCv」を「true」にすることで「savePath」に保存します。

○読み上げ命令
以下のファイルを編集することで読み上げ命令を変更できます。
「Live2dChatter_Data/ExternalPrograms/resources/impCommand.txt」
デフォルトテキスト中の@emo@は以下から選ばれます。
['喜', '哀', '驚'];
@emo@は消しても問題ありませんが、読み上げ時にモーションと連動しなくなります。

ちなみに、内部的には非表示のChatGPTウィンドウを立ち上げて、Javascript的に命令の送信と読み取りを実行しています。
そのため、UIが変わると動作しなくなる可能性があります。

○どうやって作ったの？
使用しているプログラムの断片は以下にあります。
https://github.com/Eniwder/KukaChatter
より詳しく知りたい場合は個別に連絡をください。